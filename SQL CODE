SELECT * FROM [dbo].[western country financial data CVS];

---DATA PREPROCESSING

SELECT PROFIT 
FROM [western country financial data CVS]
WHERE TRY_CAST(REPLACE(PROFIT, '$', '') AS MONEY) IS NULL
AND PROFIT IS NOT NULL;

UPDATE [western country financial data CVS]
SET REMOVE_PREFIX = 
    TRY_CAST(
        REPLACE(
            REPLACE(
                REPLACE(PROFIT, '$', ''), -- Remove $
                ',', ''                   -- Remove commas
            ), ' ', ''                    -- Remove spaces
        ) AS MONEY
    )
WHERE TRY_CAST(
        REPLACE(
            REPLACE(
                REPLACE(PROFIT, '$', ''), 
                ',', ''                   
            ), ' ', ''                    
        ) AS MONEY
    ) IS NOT NULL;

SELECT REMOVE_PREFIX 
FROM [western country financial data CVS]
WHERE REMOVE_PREFIX IS NOT NULL;

---DATA CLEANING
UPDATE [western country financial data CVS]
SET REMOVE_PREFIX = 0
WHERE REMOVE_PREFIX IS NULL;

SELECT * INTO [dbo].[newtable]
FROM [dbo].[western country financial data CVS];

select * INTO [DBO].WCFD
FROM [dbo].newtable;

select * from WCFD;

alter table[dbo].[WCFD]
DROP COLUMN PROFIT;

EXEC sp_rename '[dbo].[WCFD].REMOVE_PREFIX', 'PROFIT', 'COLUMN';

---DATA CLEANING

UPDATE WCFD
SET DISCOUNTS=(SELECT AVG(DISCOUNTS) FROM WCFD WHERE DISCOUNTS IS NOT NULL)
WHERE DISCOUNTS IS NULL;

SELECT DISCOUNTS FROM WCFD WHERE DISCOUNTS IS NULL;
SELECT PROFIT FROM WCFD WHERE PROFIT IS NULL;

---CHECKING FOR DUPLICATES

SELECT COUNT(*)FROM WCFD
GROUP BY SEGMENT, COUNTRY, PRODUCT, DISCOUNT_BAND, Units_Sold, Manufacturing_Price, Sale_Price, Gross_Sales, Discounts, SALES, COGS, DATE, PROFIT
HAVING COUNT(*)> 1;

-- NO DUPLICATE ROW IN THIS DATA

---ANALYSIS

SELECT SEGMENT, SUM(SALES)AS SALES, SUM(PROFIT) PROFIT FROM WCFD GROUP BY Segment;
SELECT SEGMENT, AVG(SALES)AS SALES, avg(PROFIT) PROFIT FROM WCFD GROUP BY Segment;
SELECT SEGMENT, MIN(SALES)AS SALES, MIN(PROFIT) PROFIT FROM WCFD GROUP BY Segment;
SELECT SEGMENT, MAX(SALES)AS SALES, MAX(PROFIT) PROFIT FROM WCFD GROUP BY Segment;

---STORAGE PROCEDURE
SELECT *FROM WCFD

---sALES AND PROFIT ANALYSIS FOR 2013
--SEGMENT WISE PROFIT
ALTER PROCEDURE SEGMENTWISEPROFIT
AS
BEGIN 
	SELECT SEGMENT, SUM(PROFIT) PROFIT FROM WCFD GROUP BY SEGMENT ORDER BY PROFIT DESC;
END;

EXEC SEGMENTWISEPROFIT

---YEARLY SALES
CREATE PROCEDURE YEARLYSALES
AS
BEGIN
	SELECT YEAR, SUM(SALES) AS SALES FROM WCFD GROUP BY YEAR ORDER BY SALES DESC
END;

EXEC YEARLYSALES

---COUNTRY WISE SALES
CREATE PROCEDURE COUNTRYWISESALES
AS
BEGIN
	SELECT COUNTRY, SUM(SALES) SALES FROM WCFD GROUP BY COUNTRY ORDER BY SALES DESC
END;

EXEC COUNTRYWISESALES

---PROFTE AND SALES BY QRT

CREATE PROCEDURE PROFITANDSALESBYQRT
AS
BEGIN
	SELECT 
	   DATEPART(YEAR, date) AS Year,
	   DATEPART(QUARTER, date) AS Quarter,
	   SUM(profit) AS Total_Profit,
	   SUM(sales) AS Total_Sales
    FROM WCFD
    GROUP BY DATEPART(YEAR, date), DATEPART(QUARTER, date)
    ORDER BY Year, Quarter;
END;

EXEC PROFITANDSALESBYQRT

CREATE PROCEDURE YEARLYPROFIT
AS
BEGIN
	SELECT YEAR, SUM(PROFIT) AS PROFIT FROM WCFD GROUP BY YEAR ORDER BY PROFIT DESC
END;

EXEC YEARLYPROFIT

---TOP 2 COUNTRIES
ALTER PROCEDURE TOP2COUNTRIES
AS
BEGIN
	SELECT TOP 2 COUNTRY, SUM(SALES) SALES, 
	SUM(PROFIT) PROFIT, SUM(DISCOUNTS) DISCOUNT, 
	SUM(UNITS_SOLD) UNIT_SOLD, 
	SUM(MANUFACTURING_PRICE) MANUFACTURING_PRICE, 
	SUM(SALE_PRICE) SALE_PRICE, 
	SUM(GROSS_SALES) GROSS_SALES, 
	SUM(COGS) COGD
	FROM WCFD GROUP BY COUNTRY 
	ORDER BY SALES, PROFIT, DISCOUNT, 
	SALE_PRICE,UNIT_SOLD, COGD, 
	MANUFACTURING_PRICE, 
	GROSS_SALES DESC
END;

EXEC TOP2COUNTRIES

CREATE PROCEDURE BOTTOM3PRODUCTS
AS
BEGIN
	SELECT TOP 3 Product, SUM(SALES) SALES, 
	SUM(PROFIT) PROFIT, SUM(DISCOUNTS) DISCOUNT, 
	SUM(UNITS_SOLD) UNIT_SOLD, 
	SUM(MANUFACTURING_PRICE) MANUFACTURING_PRICE, 
	SUM(SALE_PRICE) SALE_PRICE, 
	SUM(GROSS_SALES) GROSS_SALES, 
	SUM(COGS) COGD
	FROM WCFD GROUP BY PRODUCT 
	ORDER BY SALES, PROFIT, DISCOUNT, 
	SALE_PRICE,UNIT_SOLD, COGD, 
	MANUFACTURING_PRICE, 
	GROSS_SALES ASC
END;
EXEC BOTTOM3PRODUCTS

--PRODUCT WISE DISCOUNTS
CREATE PROCEDURE PRODUCTWISEDISCOUNT
AS
BEGIN
	SELECT PRODUCT,SUM(Discounts) DISCOUNT FROM WCFD GROUP BY PRODUCT ORDER BY DISCOUNT DESC
END;
EXEC PRODUCTWISEDISCOUNT

--NO OF UNIT SOLD YEAR OVER YEAR
CREATE PROCEDURE UNITSOLDYEAR
AS
BEGIN
	SELECT YEAR, SUM(UNITS_SOLD) UNIT_SOLD FROM WCFD GROUP BY YEAR
END;
EXEC UNITSOLDYEAR

--SEGMENT WISE PRODUCT SALES
CREATE PROCEDURE SEGMENTWISPRODUCTSALES
AS
BEGIN
	SELECT SEGMENT, PRODUCT, SUM(SALES) SALES FROM WCFD  GROUP BY SEGMENT, PRODUCT ORDER BY SEGMENT, SALES
END;
EXEC SEGMENTWISPRODUCTSALES

--SEGMENT WISE PRODUCT PROFIT
CREATE PROCEDURE SEGMENTWISPRODUCTPROFIT
AS
BEGIN
	SELECT SEGMENT, PRODUCT, SUM(PROFIT) PROFIT FROM WCFD  GROUP BY SEGMENT, PRODUCT ORDER BY SEGMENT, PROFIT
END;
EXEC SEGMENTWISPRODUCTPROFIT

--GET SALES PROFIT SUMMARY
CREATE PROCEDURE GETSALESPROFITSUMMARY
	@STARTDATE DATE,
	@ENDDATE DATE
AS
BEGIN
	SELECT
		Segment, COUNTRY,
		SUM(SALES) AS TOTAL_SALES,
		SUM(PROFIT) AS TOTAL_PROFIT,
		SUM(COGS) AS TOTAL_COGS
	 FROM [DBO].WCFD
	 WHERE DATE BETWEEN @STARTDATE AND @ENDDATE
	 GROUP BY Segment, COUNTRY;
END;

EXEC GETSALESPROFITSUMMARY @STARTDATE ='2013-12-31', @ENDDATE = '2014-12-31';

--Top Product 

CREATE PROCEDURE GETTOPPRODUCT
	@TOPN INT
AS
BEGIN
	SELECT TOP(@TOPN)
		PRODUCT,
		SUM(Units_Sold) TOTAL_UNIT_SOLD,
		SUM(SALES),
		SUM(PROFIT)
	FROM [DBO].[WCFD]
	GROUP BY PRODUCT
	ORDER BY TOTAL_UNIT_SOLD;
END;

EXEC GETTOPPRODUCT @TOPN ='10'

---Sales Trend Analysis
CREATE PROCEDURE GETSALESTREND
AS
BEGIN
	SELECT Segment,
	Month_Name, YEAR,
	SUM(SALES) TOTAL_SALES,
	SUM(PROFIT) AS TOTAL_PROFIT
	FROM [DBO].WCFD
	GROUP BY SEGMENT, MONTH_NAME, YEAR
	ORDER BY YEAR, MONTH_NAME;
END;

EXEC GETSALESTREND;

select * from [dbo].[WCFD];

--product wise sales

ALTER procedure productwisesales
As
BEGIN
	SELECT PRODUCT, SUM(SALES) AS SALES FROM WCFD GROUP BY PRODUCT ORDER BY SALES DESC;
END;

EXEC PRODUCTWISESALES

